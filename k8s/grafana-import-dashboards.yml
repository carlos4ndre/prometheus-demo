apiVersion: batch/v1
kind: Job
metadata:
  name: grafana-import-dashboards
  namespace: monitoring
  labels:
    app: grafana
    component: import-dashboards
spec:
  template:
    metadata:
      name: grafana-import-dashboards
      labels:
        app: grafana
        component: import-dashboards
    spec:
      initContainers:
        - name: "wait-for-endpoints"
          image: "jwilder/dockerize"
          imagePullPolicy: "IfNotPresent"
          command: ["sh", "-c", "dockerize -wait tcp://prometheus:9090 -wait tcp://grafana:3000 -timeout 5m"]
      containers:
      - name: grafana-import-dashboards
        image: giantswarm/tiny-tools
        command: ["/bin/sh", "-c"]
        workingDir: /opt/grafana-import-dashboards
        args:
          - >
            for file in *-datasource.json ; do
              if [ -e "$file" ] ; then
                echo "importing $file" &&
                curl --silent --fail --show-error \
                  --request POST http://auto:auto@grafana:3000/api/datasources \
                  --header "Content-Type: application/json" \
                  --header "Accept: application/json" \
                  --data-binary "@$file" ;
                echo "" ;
              fi
            done ;
            for file in *-dashboard.json ; do
              if [ -e "$file" ] ; then
                echo "importing $file" &&
                curl --silent --fail --show-error \
                  --request POST http://auto:auto@grafana:3000/api/dashboards/import \
                  --header "Content-Type: application/json" \
                  --header "Accept: application/json" \
                  --data-binary "@$file" ;
                echo "" ;
              fi
            done ;
        volumeMounts:
        - name: config-volume
          mountPath: /opt/grafana-import-dashboards
      restartPolicy: Never
      volumes:
      - name: config-volume
        configMap:
          name: grafana-import-dashboards
